import flixel.FlxG;
import flixel.tweens.FlxEase;

import funkin.modding.module.Module;
import funkin.modding.module.ModuleHandler;

import funkin.play.PlayState;

class SSCS_CameraSetter extends Module {
	public function new() {
		super("sscs-camera-setter-module");
	}

	public var DEFAULT_SETTINGS = {
		position: {
			x: null,
			y: null,
			ease: FlxEase.sineInOut,
			time: 1.0
		},
		zoom: {
			zoom: 1.0,
			time: 1.0,
			ease: FlxEase.sineInOut,
			direct: false
		}
	}
	public var SETTINGS = null;

	function setCameraPosition(x:Float = 0, y:Float = 0, time:Float = 0, ease:FlxEase = FlxEase.linear) {
		if (!ModuleHandler.getModule("sscs-save-module").getEnabled())
			return;

		PlayState.instance.tweenCameraToPosition((x ?? PlayState.instance.currentStage.getDad().cameraFocusPoint.x),(y ?? PlayState.instance.currentStage.getDad().cameraFocusPoint.y), time, (ease ?? FlxEase.linear));
	}

	
	function setCameraZoom(zoom:Float = 1, time:Float = 0, ease:FlxEase = FlxEase.linear, direct:Bool = true) {
		// direct == true: Set zoom directly.
		// direct == false: Set zoom as a multiplier of the current stage's default zoom.

		if (!ModuleHandler.getModule("sscs-save-module").getEnabled())
			return;
		PlayState.instance.tweenCameraZoom(zoom, time, direct, (ease ?? FlxEase.linear));
	}

        public function onCountdownStart(event:CountdownScriptEvent)
        {
                super.onCountdownStart(event);
		
		if (SETTINGS == null)
			return;
		if (PlayState.instance == null)
			return;
		if (!ModuleHandler.getModule("sscs-save-module").getEnabled())
			return;

		var songName = PlayState.instance.currentSong.songName;
                var songVariation = PlayState.instance.currentVariation;
                var songString = songName + "-" + songVariation;
                songString = songString.toLowerCase();

		trace("Camera Settings for Song( " + songString + " ): " + SETTINGS);

		setCameraPosition(SETTINGS.position.x, SETTINGS.position.y, SETTINGS.position.time, SETTINGS.position.ease);
		setCameraZoom(SETTINGS.zoom.zoom, SETTINGS.zoom.time, SETTINGS.zoom.ease, SETTINGS.zoom.direct);
        }
}
